1. List the commands for adding, updating, and deleting data
      INSERT INTO
      UPDATE SET
      DELETE FROM


2. Explain the structure for each type of command.
      First we specify what we want to do: insert , update  or delete. Then
      we specify which table we want to do this to. Then we specify the data to
      insert, update or delete. Finally we specify any parameters using where.


3. What are some the data types that can be used in tables? Give a real world example of each.
      date - The date you placed an order on amazon
      money - The price of the product you ordered
      text - The name of the product you ordered


4. Think through how to create a new table to hold a list of people invited to a wedding.
   This table needs to have first and last name, whether they sent in their RSVP, the number
   of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

   a. Which data type would you use to store each of the following pieces of information?
            First and last name:  text
            RSVP:                 boolean
            Number of guests:     integer
            Number of meals:      integer

   b. Write a command that makes the table to track the wedding.
            CREATE TABLE wedding (
              id integer,
              rsvp boolean,
              name text,
              guests integer,
              meals integer
            );

   c. Using the table we just created, write a command that adds a column to track whether they
      were sent a thank you card.
            ALTER TABLE wedding ADD COLUMN card boolean;

   d. You have decided to move the data about the meals to another table, so write a command to
      remove the column storing the number meals from the wedding table.
            ALTER TABLE wedding DROP COLUMN meals;

   e. The guests are going to need a place to sit at the reception, so write a command that adds a
      column for table number.
            ALTER TABLE wedding ADD COLUMN table_number integer;

   f. The wedding is over and we do not need to keep this information, so write a command that
      deletes the wedding table from the database.
            DROP TABLE wedding;


5. Write a command to make a new table to hold the books in a library with the columns ISBN, title,
   author, genre, publishing date, number of copies, and available copies.

        CREATE TABLE library (
          ISBN integer,
          title text,
          author text,
          genre text,
          published date,
          copies integer,
          available integer
        );

   a. Find three books and add their information to the table.
            INSERT INTO library (ISBN, title, author, genre, published, copies, available)
            VALUES
            (0316387312, 'The Blade Itself', 'Joe Abercrombie', 'Fantasy', '2006-05-04', 12, 6),
            (0307887448, 'Ready Player One', 'Ernest Cline', 'Sci-fi', '2011-08-16', 14, 1),
            (0553593714, 'A Game of Thrones', 'George RR Martin', 'Fantasy', '1996-08-01', 25, 14);

   b. Someone has just checked out one of the books. Change the available copies column to 1 fewer.
            UPDATE library SET available=13 WHERE ISBN=0553593714;

   c. Now one of the books has been added to the banned books list. Remove it from the table.
            DELETE FROM library WHERE ISBN=0307887448;


6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year
   launched, country of origin, a brief description of the mission, orbiting body, if it is currently
   operating, and approximate miles from Earth. In addition to the table creation, provide commands
   that perform the following operations:
        CREATE TABLE spacecrafts (
          id integer,
          name text,
          launched date,
          origin text,
          mission text,
          orbiting integer,
          operational boolean,
          distance integer
        );

  a. Add 3 non-Earth-orbiting satellites to the table.
        INSERT INTO spacecraft (id, name, launched, origin, mission, orbiting, operational, distance)
        VALUES
        (1, 'First Satellite', '2006-05-04', 'United States', 'Find Aliens', 'Jupiter', true, 1845472638),
        (2, 'Second Satellite', '2009-06-12', 'United Kingdom', 'Find Origin of the Universe', 'The Sun', true, 845472638),
        (3, 'Third Satellite', '2013-09-27', 'Canada', 'Look at Asteroids', 'Mars', true, 345472638);

  b. Remove one of the satellites from the table since it has just been crashed into the planet.
        DELETE FROM spacecrafts WHERE id=2;

  c. Edit another satellite because it is no longer operating and change the value to reflect that.
        UPDATE spacecrafts SET operational=false WHERE id=3;


7. Write a command to make a new table to hold the emails in your inbox. This table should include an id,
   the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether
   or not it’s been read, and the id of the email chain it’s in. Also provide commands that perform the
   following operations:
        CREATE TABLE email (
          id integer,
          subject text,
          sender text,
          recipients text,
          body text,
          timestamp timestamp,
          read boolean,
          chain integer
        );

  a. Add 3 new emails to the inbox.
        INSERT INTO email (id, subject, sender, recipients, body, timestamp, read, chain)
        VALUES
        (1, 'School', 'school@gmail.com', 'Dan, Emily', 'You failed', 2017-11-14, true, 103),
        (2, 'Work', 'work@yahoo.com', 'Steve, Molly', 'You're fired', 2018-03-11, false, 198),
        (3, 'Stuff', 'stuff@aol.com', 'none', 'Stuff', 2018-04-01, true, 244);

  b. You’ve just deleted one of the emails, so write a command to remove the row from the inbox table.
        DELETE FROM email WHERE id=2;

  c. You started reading an email but just heard a crash in another room. Mark the email as unread
     before investigating, so you can come back to it later.
        UPDATE email SET read=false WHERE id=3;
